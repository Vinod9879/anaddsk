# COMPLETE APPLICATION ARCHITECTURE FLOW DIAGRAMS
# Copy these into your preferred diagramming tool to create PNG files

## 1. AUTHENTICATION FLOW
```
Frontend (React)          Service Layer           Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. Login Form    │────▶│ AuthService     │────▶│ AuthController  │
│    - Email       │     │ .login()        │     │ .Login()        │
│    - Password    │     │                 │     │                 │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. JWT Token    │◀────│ Response        │◀────│ JWT Service     │
│    Stored       │     │ - Token         │     │ - Generate JWT  │
│    in Cookies   │     │ - User Data     │     │ - Hash Password │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Auto Token   │◀────│ Axios           │◀────│ Database        │
│    Verification │     │ Interceptor     │     │ - Users Table   │
│    on Requests  │     │ - Add Bearer    │     │ - Role Check    │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## 2. DOCUMENT UPLOAD FLOW
```
Frontend (React)          Service Layer           Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. File Select  │────▶│ DocumentService │────▶│ UserDashboard   │
│    - EC (PDF)   │     │ .uploadDocs()  │     │ Controller      │
│    - Aadhaar    │     │                 │     │ .UploadDocs()  │
│    - PAN (PNG)  │     │                 │     │                 │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. FormData     │◀────│ Axios POST      │◀────│ File Validation │
│    Creation     │     │ - Multipart     │     │ - PDF/PNG Check │
│    - EC File    │     │ - Auth Header   │     │ - Size Limit    │
│    - Aadhaar    │     │                 │     │                 │
│    - PAN File   │     │                 │     │                 │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Success      │◀────│ Response        │◀────│ File Storage    │
│    Response     │     │ - Upload ID     │     │ - Save to Disk  │
│    - Upload ID  │     │ - File Names    │     │ - DB Record     │
│    - Status     │     │ - Status        │     │ - UserUploaded  │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## 3. DOCUMENT EXTRACTION FLOW
```
Frontend (React)          Service Layer           Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. Extract      │────▶│ DocumentService │────▶│ AdminDashboard  │
│    Button       │     │ .extractDocs()  │     │ Controller      │
│    Click        │     │                 │     │ .ExtractDocs()  │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. Loading      │◀────│ Axios POST      │◀────│ DLL Integration │
│    State        │     │ - Upload ID     │     │ - DocumentVerif │
│    - Spinner    │     │ - Auth Header   │     │ - ExtractEC()   │
│    - Progress   │     │                 │     │ - ExtractAadhaar│
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Success      │◀────│ Response        │◀────│ Data Storage    │
│    Message      │     │ - ExtractedData │     │ - ExtractedData │
│    - Toast      │     │ - Status        │     │ - Database      │
│    - Refresh    │     │ - Message       │     │ - Audit Log     │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## 4. VERIFICATION FLOW
```
Frontend (React)          Service Layer           Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. Verify       │────▶│ DocumentService │────▶│ AdminDashboard  │
│    Button       │     │ .triggerVerif() │     │ Controller      │
│    Click        │     │                 │     │ .TriggerVerif() │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. Verification │◀────│ Axios POST      │◀────│ Verification    │
│    Modal        │     │ - Document ID   │     │ Service         │
│    - Results    │     │ - Auth Header   │     │ - Compare Data  │
│    - Status     │     │                 │     │ - Risk Score    │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Results      │◀────│ Response        │◀────│ Database        │
│    Display      │     │ - Match Status  │     │ - Verification  │
│    - Matches    │     │ - Risk Level    │     │ - Results       │
│    - Mismatches │     │ - Details       │     │ - Audit Log     │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## 5. ADMIN DASHBOARD FLOW
```
Frontend (React)          Service Layer           Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. Admin        │────▶│ UserService      │────▶│ AdminDashboard  │
│    Dashboard    │     │ .getAllUsers()   │     │ Controller      │
│    Load         │     │                 │     │ .GetAllUsers()  │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. User List    │◀────│ Axios GET        │◀────│ Database Query  │
│    Display      │     │ - Auth Header   │     │ - Users Table   │
│    - Table      │     │ - Role Check    │     │ - Role Filter    │
│    - Actions    │     │                 │     │                 │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Document     │◀────│ DocumentService  │◀────│ Document        │
│    Management   │     │ .getAllDocs()   │     │ Operations      │
│    - View       │     │ .extractDocs()  │     │ - CRUD          │
│    - Extract    │     │ .triggerVerif() │     │ - File Ops      │
│    - Verify     │     │                 │     │ - Audit Log     │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## 6. AUDIT LOGS FLOW
```
Frontend (React)          Service Layer           Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. Audit Logs  │────▶│ AuditLogsService│────▶│ AuditLogs       │
│    Page Load    │     │ .getAllLogs()   │     │ Controller      │
│                 │     │                 │     │ .GetAllLogs()   │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. Filtered     │◀────│ Axios GET       │◀────│ Database Query  │
│    Results      │     │ - Pagination    │     │ - UserActivity  │
│    - Table      │     │ - Filters      │     │ - Logs Table    │
│    - Pagination │     │ - Date Range   │     │ - Join Users    │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Real-time    │◀────│ Auto Refresh    │◀────│ Audit Service   │
│    Updates      │     │ - Polling       │     │ - Log Activity │
│    - Activity   │     │ - WebSocket    │     │ - Track Changes │
│    - Changes    │     │                 │     │ - Store Logs   │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## 7. DATABASE ARCHITECTURE
```
┌─────────────────────────────────────────────────────────────┐
│                    DATABASE SCHEMA                          │
├─────────────────────────────────────────────────────────────┤
│  Users Table                                                │
│  ├── Id (PK)                                               │
│  ├── FullName, Email, Phone                                │
│  ├── City, State, Pincode                                  │
│  ├── Role, PasswordHash                                     │
│  └── CreatedAt, UpdatedAt                                  │
├─────────────────────────────────────────────────────────────┤
│  UserUploadedDocuments Table                                │
│  ├── Id (PK)                                               │
│  ├── UserId (FK)                                           │
│  ├── ECPath, AadhaarPath, PANPath                          │
│  ├── ExtractedData, IsVerified                             │
│  ├── VerificationStatus, RiskScore                          │
│  ├── SurveyNumber                                          │
│  └── CreatedAt                                             │
├─────────────────────────────────────────────────────────────┤
│  ExtractedData Table                                        │
│  ├── Id (PK)                                               │
│  ├── UploadId (FK)                                         │
│  ├── ApplicationNumber, ApplicantName                      │
│  ├── SurveyNo, MeasuringArea                               │
│  ├── AadhaarName, AadhaarNo, DOB                           │
│  ├── PANName, PANNo                                        │
│  └── CreatedAt                                             │
├─────────────────────────────────────────────────────────────┤
│  VerificationResults Table                                  │
│  ├── Id (PK)                                               │
│  ├── UploadId (FK)                                         │
│  ├── Match Status Fields                                   │
│  ├── OverallMatch, Status                                  │
│  ├── RiskScore, VerifiedAt                                 │
│  └── CreatedAt                                             │
├─────────────────────────────────────────────────────────────┤
│  UserActivityLogs Table                                    │
│  ├── Id (PK)                                               │
│  ├── UserId (FK)                                          │
│  ├── Activity, Description                                 │
│  ├── IPAddress, UserAgent                                  │
│  ├── RelatedEntityType, ActionResult                        │
│  └── Timestamp                                             │
└─────────────────────────────────────────────────────────────┘
```

## 8. SECURITY FLOW
```
Frontend (React)          Middleware Layer        Backend (ASP.NET)
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 1. JWT Token    │────▶│ Axios            │────▶│ JWT Middleware  │
│    Storage      │     │ Interceptor     │     │ - Validate      │
│    - Cookies    │     │ - Auto Attach   │     │ - Extract Claims│
│    - Secure     │     │ - Error Handle  │     │ - Role Check    │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 2. Route        │◀────│ Auth Context    │◀────│ Authorization   │
│    Protection   │     │ - isAuthenticated│  │ - [Authorize]   │
│    - Guards     │     │ - isAdmin      │     │ - Role-based    │
│    - Redirects  │     │ - User State   │     │ - Permission    │
└─────────────────┘     └─────────────────┘     └─────────────────┘
                                │                        │
                                ▼                        ▼
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│ 3. Auto Logout  │◀────│ Token           │◀────│ Audit Logging   │
│    on Expiry    │     │ Expiration      │     │ - Track Actions │
│    - Redirect   │     │ - Auto Refresh │     │ - Security Logs │
│    - Cleanup    │     │ - Error Handle │     │ - Compliance    │
└─────────────────┘     └─────────────────┘     └─────────────────┘
```

## QUICK STEPS TO CREATE PNG FILES:

1. **Go to Draw.io** (https://app.diagrams.net/)
2. **Create New Diagram**
3. **Copy each section above** into the diagram
4. **Use the shapes and connectors** to recreate the flow
5. **Export as PNG** (File → Export as → PNG)

## ALTERNATIVE: Use Mermaid (if supported)
```mermaid
graph TD
    A[Frontend React] --> B[Service Layer]
    B --> C[Backend ASP.NET]
    C --> D[Database]
    D --> E[File Storage]
```

## COLOR CODING SUGGESTIONS:
- 🔵 Blue: Frontend Components
- 🟢 Green: Service Layer
- 🟠 Orange: Backend Controllers
- 🟣 Purple: Database Operations
- 🔴 Red: Security & Authentication
- 🟡 Yellow: File Operations
